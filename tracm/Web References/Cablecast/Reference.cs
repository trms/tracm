//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace tracm.Cablecast {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CablecastWSSoap", Namespace="http://www.trms.com/CablecastWS/")]
    public partial class CablecastWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback WSVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DataVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShowInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScheduleInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCGExemptScheduleInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProducersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChannelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleShowSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvancedShowSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback AdvancedCGExemptShowSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLiveURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback BugStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback BugTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback CrawlTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewShowRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShowRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewProducerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProducerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddScheduleEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveScheduleEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShowReelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReelOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProducerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRecordRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveRecordRunOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecordDevicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CustomSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastModifiedSearchOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CablecastWS() {
            this.Url = global::tracm.Properties.Settings.Default.tracm_Cablecast_CablecastWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event WSVersionCompletedEventHandler WSVersionCompleted;
        
        /// <remarks/>
        public event DataVersionCompletedEventHandler DataVersionCompleted;
        
        /// <remarks/>
        public event GetShowInformationCompletedEventHandler GetShowInformationCompleted;
        
        /// <remarks/>
        public event GetScheduleInformationCompletedEventHandler GetScheduleInformationCompleted;
        
        /// <remarks/>
        public event GetCGExemptScheduleInformationCompletedEventHandler GetCGExemptScheduleInformationCompleted;
        
        /// <remarks/>
        public event GetProducersCompletedEventHandler GetProducersCompleted;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event GetProjectsCompletedEventHandler GetProjectsCompleted;
        
        /// <remarks/>
        public event GetLocationsCompletedEventHandler GetLocationsCompleted;
        
        /// <remarks/>
        public event GetChannelsCompletedEventHandler GetChannelsCompleted;
        
        /// <remarks/>
        public event SimpleShowSearchCompletedEventHandler SimpleShowSearchCompleted;
        
        /// <remarks/>
        public event AdvancedShowSearchCompletedEventHandler AdvancedShowSearchCompleted;
        
        /// <remarks/>
        public event AdvancedCGExemptShowSearchCompletedEventHandler AdvancedCGExemptShowSearchCompleted;
        
        /// <remarks/>
        public event GetLiveURLCompletedEventHandler GetLiveURLCompleted;
        
        /// <remarks/>
        public event BugStateCompletedEventHandler BugStateCompleted;
        
        /// <remarks/>
        public event BugTextCompletedEventHandler BugTextCompleted;
        
        /// <remarks/>
        public event CrawlTextCompletedEventHandler CrawlTextCompleted;
        
        /// <remarks/>
        public event CreateNewShowRecordCompletedEventHandler CreateNewShowRecordCompleted;
        
        /// <remarks/>
        public event UpdateShowRecordCompletedEventHandler UpdateShowRecordCompleted;
        
        /// <remarks/>
        public event CreateNewProducerCompletedEventHandler CreateNewProducerCompleted;
        
        /// <remarks/>
        public event UpdateProducerCompletedEventHandler UpdateProducerCompleted;
        
        /// <remarks/>
        public event CreateNewProjectCompletedEventHandler CreateNewProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event AddScheduleEventCompletedEventHandler AddScheduleEventCompleted;
        
        /// <remarks/>
        public event RemoveScheduleEventCompletedEventHandler RemoveScheduleEventCompleted;
        
        /// <remarks/>
        public event GetShowReelsCompletedEventHandler GetShowReelsCompleted;
        
        /// <remarks/>
        public event AddReelCompletedEventHandler AddReelCompleted;
        
        /// <remarks/>
        public event UpdateReelCompletedEventHandler UpdateReelCompleted;
        
        /// <remarks/>
        public event DeleteReelCompletedEventHandler DeleteReelCompleted;
        
        /// <remarks/>
        public event GetProducerInfoCompletedEventHandler GetProducerInfoCompleted;
        
        /// <remarks/>
        public event CreateRecordRunCompletedEventHandler CreateRecordRunCompleted;
        
        /// <remarks/>
        public event RemoveRecordRunCompletedEventHandler RemoveRecordRunCompleted;
        
        /// <remarks/>
        public event GetRecordDevicesCompletedEventHandler GetRecordDevicesCompleted;
        
        /// <remarks/>
        public event GetFormatsCompletedEventHandler GetFormatsCompleted;
        
        /// <remarks/>
        public event CustomSearchCompletedEventHandler CustomSearchCompleted;
        
        /// <remarks/>
        public event LastModifiedSearchCompletedEventHandler LastModifiedSearchCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/WSVersion", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WSVersion() {
            object[] results = this.Invoke("WSVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WSVersionAsync() {
            this.WSVersionAsync(null);
        }
        
        /// <remarks/>
        public void WSVersionAsync(object userState) {
            if ((this.WSVersionOperationCompleted == null)) {
                this.WSVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWSVersionOperationCompleted);
            }
            this.InvokeAsync("WSVersion", new object[0], this.WSVersionOperationCompleted, userState);
        }
        
        private void OnWSVersionOperationCompleted(object arg) {
            if ((this.WSVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WSVersionCompleted(this, new WSVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/DataVersion", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DataVersion() {
            object[] results = this.Invoke("DataVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DataVersionAsync() {
            this.DataVersionAsync(null);
        }
        
        /// <remarks/>
        public void DataVersionAsync(object userState) {
            if ((this.DataVersionOperationCompleted == null)) {
                this.DataVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDataVersionOperationCompleted);
            }
            this.InvokeAsync("DataVersion", new object[0], this.DataVersionOperationCompleted, userState);
        }
        
        private void OnDataVersionOperationCompleted(object arg) {
            if ((this.DataVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DataVersionCompleted(this, new DataVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetShowInformation", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShowInfo GetShowInformation(int ShowID) {
            object[] results = this.Invoke("GetShowInformation", new object[] {
                        ShowID});
            return ((ShowInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetShowInformationAsync(int ShowID) {
            this.GetShowInformationAsync(ShowID, null);
        }
        
        /// <remarks/>
        public void GetShowInformationAsync(int ShowID, object userState) {
            if ((this.GetShowInformationOperationCompleted == null)) {
                this.GetShowInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowInformationOperationCompleted);
            }
            this.InvokeAsync("GetShowInformation", new object[] {
                        ShowID}, this.GetShowInformationOperationCompleted, userState);
        }
        
        private void OnGetShowInformationOperationCompleted(object arg) {
            if ((this.GetShowInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowInformationCompleted(this, new GetShowInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetScheduleInformation", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ScheduleInfo[] GetScheduleInformation(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID) {
            object[] results = this.Invoke("GetScheduleInformation", new object[] {
                        ChannelID,
                        FromDate,
                        ToDate,
                        restrictToShowID});
            return ((ScheduleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScheduleInformationAsync(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID) {
            this.GetScheduleInformationAsync(ChannelID, FromDate, ToDate, restrictToShowID, null);
        }
        
        /// <remarks/>
        public void GetScheduleInformationAsync(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID, object userState) {
            if ((this.GetScheduleInformationOperationCompleted == null)) {
                this.GetScheduleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScheduleInformationOperationCompleted);
            }
            this.InvokeAsync("GetScheduleInformation", new object[] {
                        ChannelID,
                        FromDate,
                        ToDate,
                        restrictToShowID}, this.GetScheduleInformationOperationCompleted, userState);
        }
        
        private void OnGetScheduleInformationOperationCompleted(object arg) {
            if ((this.GetScheduleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScheduleInformationCompleted(this, new GetScheduleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetCGExemptScheduleInformation", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ScheduleInfo[] GetCGExemptScheduleInformation(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID) {
            object[] results = this.Invoke("GetCGExemptScheduleInformation", new object[] {
                        ChannelID,
                        FromDate,
                        ToDate,
                        restrictToShowID});
            return ((ScheduleInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCGExemptScheduleInformationAsync(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID) {
            this.GetCGExemptScheduleInformationAsync(ChannelID, FromDate, ToDate, restrictToShowID, null);
        }
        
        /// <remarks/>
        public void GetCGExemptScheduleInformationAsync(int ChannelID, System.DateTime FromDate, System.DateTime ToDate, int restrictToShowID, object userState) {
            if ((this.GetCGExemptScheduleInformationOperationCompleted == null)) {
                this.GetCGExemptScheduleInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCGExemptScheduleInformationOperationCompleted);
            }
            this.InvokeAsync("GetCGExemptScheduleInformation", new object[] {
                        ChannelID,
                        FromDate,
                        ToDate,
                        restrictToShowID}, this.GetCGExemptScheduleInformationOperationCompleted, userState);
        }
        
        private void OnGetCGExemptScheduleInformationOperationCompleted(object arg) {
            if ((this.GetCGExemptScheduleInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCGExemptScheduleInformationCompleted(this, new GetCGExemptScheduleInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetProducers", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Producer[] GetProducers(int ChannelID) {
            object[] results = this.Invoke("GetProducers", new object[] {
                        ChannelID});
            return ((Producer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProducersAsync(int ChannelID) {
            this.GetProducersAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void GetProducersAsync(int ChannelID, object userState) {
            if ((this.GetProducersOperationCompleted == null)) {
                this.GetProducersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProducersOperationCompleted);
            }
            this.InvokeAsync("GetProducers", new object[] {
                        ChannelID}, this.GetProducersOperationCompleted, userState);
        }
        
        private void OnGetProducersOperationCompleted(object arg) {
            if ((this.GetProducersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProducersCompleted(this, new GetProducersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetCategories", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Category[] GetCategories(int ChannelID) {
            object[] results = this.Invoke("GetCategories", new object[] {
                        ChannelID});
            return ((Category[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(int ChannelID) {
            this.GetCategoriesAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(int ChannelID, object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[] {
                        ChannelID}, this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetProjects", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Project[] GetProjects(int ChannelID) {
            object[] results = this.Invoke("GetProjects", new object[] {
                        ChannelID});
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsAsync(int ChannelID) {
            this.GetProjectsAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void GetProjectsAsync(int ChannelID, object userState) {
            if ((this.GetProjectsOperationCompleted == null)) {
                this.GetProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsOperationCompleted);
            }
            this.InvokeAsync("GetProjects", new object[] {
                        ChannelID}, this.GetProjectsOperationCompleted, userState);
        }
        
        private void OnGetProjectsOperationCompleted(object arg) {
            if ((this.GetProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetLocations", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Location[] GetLocations() {
            object[] results = this.Invoke("GetLocations", new object[0]);
            return ((Location[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationsAsync() {
            this.GetLocationsAsync(null);
        }
        
        /// <remarks/>
        public void GetLocationsAsync(object userState) {
            if ((this.GetLocationsOperationCompleted == null)) {
                this.GetLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationsOperationCompleted);
            }
            this.InvokeAsync("GetLocations", new object[0], this.GetLocationsOperationCompleted, userState);
        }
        
        private void OnGetLocationsOperationCompleted(object arg) {
            if ((this.GetLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationsCompleted(this, new GetLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetChannels", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Channel[] GetChannels() {
            object[] results = this.Invoke("GetChannels", new object[0]);
            return ((Channel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChannelsAsync() {
            this.GetChannelsAsync(null);
        }
        
        /// <remarks/>
        public void GetChannelsAsync(object userState) {
            if ((this.GetChannelsOperationCompleted == null)) {
                this.GetChannelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChannelsOperationCompleted);
            }
            this.InvokeAsync("GetChannels", new object[0], this.GetChannelsOperationCompleted, userState);
        }
        
        private void OnGetChannelsOperationCompleted(object arg) {
            if ((this.GetChannelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChannelsCompleted(this, new GetChannelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/SimpleShowSearch", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SiteSearchResult[] SimpleShowSearch(int ChannelID, string searchString) {
            object[] results = this.Invoke("SimpleShowSearch", new object[] {
                        ChannelID,
                        searchString});
            return ((SiteSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void SimpleShowSearchAsync(int ChannelID, string searchString) {
            this.SimpleShowSearchAsync(ChannelID, searchString, null);
        }
        
        /// <remarks/>
        public void SimpleShowSearchAsync(int ChannelID, string searchString, object userState) {
            if ((this.SimpleShowSearchOperationCompleted == null)) {
                this.SimpleShowSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleShowSearchOperationCompleted);
            }
            this.InvokeAsync("SimpleShowSearch", new object[] {
                        ChannelID,
                        searchString}, this.SimpleShowSearchOperationCompleted, userState);
        }
        
        private void OnSimpleShowSearchOperationCompleted(object arg) {
            if ((this.SimpleShowSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleShowSearchCompleted(this, new SimpleShowSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/AdvancedShowSearch", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SiteSearchResult[] AdvancedShowSearch(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites) {
            object[] results = this.Invoke("AdvancedShowSearch", new object[] {
                        ChannelID,
                        searchString,
                        eventDate,
                        dateComparator,
                        restrictToCategoryID,
                        restrictToProducerID,
                        restrictToProjectID,
                        displayStreamingShowsOnly,
                        searchOtherSites});
            return ((SiteSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void AdvancedShowSearchAsync(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites) {
            this.AdvancedShowSearchAsync(ChannelID, searchString, eventDate, dateComparator, restrictToCategoryID, restrictToProducerID, restrictToProjectID, displayStreamingShowsOnly, searchOtherSites, null);
        }
        
        /// <remarks/>
        public void AdvancedShowSearchAsync(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites, object userState) {
            if ((this.AdvancedShowSearchOperationCompleted == null)) {
                this.AdvancedShowSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvancedShowSearchOperationCompleted);
            }
            this.InvokeAsync("AdvancedShowSearch", new object[] {
                        ChannelID,
                        searchString,
                        eventDate,
                        dateComparator,
                        restrictToCategoryID,
                        restrictToProducerID,
                        restrictToProjectID,
                        displayStreamingShowsOnly,
                        searchOtherSites}, this.AdvancedShowSearchOperationCompleted, userState);
        }
        
        private void OnAdvancedShowSearchOperationCompleted(object arg) {
            if ((this.AdvancedShowSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvancedShowSearchCompleted(this, new AdvancedShowSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/AdvancedCGExemptShowSearch", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public SiteSearchResult[] AdvancedCGExemptShowSearch(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites) {
            object[] results = this.Invoke("AdvancedCGExemptShowSearch", new object[] {
                        ChannelID,
                        searchString,
                        eventDate,
                        dateComparator,
                        restrictToCategoryID,
                        restrictToProducerID,
                        restrictToProjectID,
                        displayStreamingShowsOnly,
                        searchOtherSites});
            return ((SiteSearchResult[])(results[0]));
        }
        
        /// <remarks/>
        public void AdvancedCGExemptShowSearchAsync(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites) {
            this.AdvancedCGExemptShowSearchAsync(ChannelID, searchString, eventDate, dateComparator, restrictToCategoryID, restrictToProducerID, restrictToProjectID, displayStreamingShowsOnly, searchOtherSites, null);
        }
        
        /// <remarks/>
        public void AdvancedCGExemptShowSearchAsync(int ChannelID, string searchString, System.DateTime eventDate, string dateComparator, int restrictToCategoryID, int restrictToProducerID, int restrictToProjectID, bool displayStreamingShowsOnly, bool searchOtherSites, object userState) {
            if ((this.AdvancedCGExemptShowSearchOperationCompleted == null)) {
                this.AdvancedCGExemptShowSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdvancedCGExemptShowSearchOperationCompleted);
            }
            this.InvokeAsync("AdvancedCGExemptShowSearch", new object[] {
                        ChannelID,
                        searchString,
                        eventDate,
                        dateComparator,
                        restrictToCategoryID,
                        restrictToProducerID,
                        restrictToProjectID,
                        displayStreamingShowsOnly,
                        searchOtherSites}, this.AdvancedCGExemptShowSearchOperationCompleted, userState);
        }
        
        private void OnAdvancedCGExemptShowSearchOperationCompleted(object arg) {
            if ((this.AdvancedCGExemptShowSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AdvancedCGExemptShowSearchCompleted(this, new AdvancedCGExemptShowSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetLiveURL", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLiveURL(int ChannelID) {
            object[] results = this.Invoke("GetLiveURL", new object[] {
                        ChannelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLiveURLAsync(int ChannelID) {
            this.GetLiveURLAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void GetLiveURLAsync(int ChannelID, object userState) {
            if ((this.GetLiveURLOperationCompleted == null)) {
                this.GetLiveURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLiveURLOperationCompleted);
            }
            this.InvokeAsync("GetLiveURL", new object[] {
                        ChannelID}, this.GetLiveURLOperationCompleted, userState);
        }
        
        private void OnGetLiveURLOperationCompleted(object arg) {
            if ((this.GetLiveURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLiveURLCompleted(this, new GetLiveURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/BugState", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool BugState(int ChannelID) {
            object[] results = this.Invoke("BugState", new object[] {
                        ChannelID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void BugStateAsync(int ChannelID) {
            this.BugStateAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void BugStateAsync(int ChannelID, object userState) {
            if ((this.BugStateOperationCompleted == null)) {
                this.BugStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBugStateOperationCompleted);
            }
            this.InvokeAsync("BugState", new object[] {
                        ChannelID}, this.BugStateOperationCompleted, userState);
        }
        
        private void OnBugStateOperationCompleted(object arg) {
            if ((this.BugStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BugStateCompleted(this, new BugStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/BugText", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BugText(int ChannelID) {
            object[] results = this.Invoke("BugText", new object[] {
                        ChannelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BugTextAsync(int ChannelID) {
            this.BugTextAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void BugTextAsync(int ChannelID, object userState) {
            if ((this.BugTextOperationCompleted == null)) {
                this.BugTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBugTextOperationCompleted);
            }
            this.InvokeAsync("BugText", new object[] {
                        ChannelID}, this.BugTextOperationCompleted, userState);
        }
        
        private void OnBugTextOperationCompleted(object arg) {
            if ((this.BugTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BugTextCompleted(this, new BugTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CrawlText", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CrawlText(int ChannelID) {
            object[] results = this.Invoke("CrawlText", new object[] {
                        ChannelID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CrawlTextAsync(int ChannelID) {
            this.CrawlTextAsync(ChannelID, null);
        }
        
        /// <remarks/>
        public void CrawlTextAsync(int ChannelID, object userState) {
            if ((this.CrawlTextOperationCompleted == null)) {
                this.CrawlTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCrawlTextOperationCompleted);
            }
            this.InvokeAsync("CrawlText", new object[] {
                        ChannelID}, this.CrawlTextOperationCompleted, userState);
        }
        
        private void OnCrawlTextOperationCompleted(object arg) {
            if ((this.CrawlTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CrawlTextCompleted(this, new CrawlTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CreateNewShowRecord", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateNewShowRecord(
                    string LocalID, 
                    int LocationID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] NewReel[] Reels, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    [System.Xml.Serialization.XmlElementAttribute("BugText")] string BugText1, 
                    [System.Xml.Serialization.XmlElementAttribute("CrawlText")] string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password) {
            object[] results = this.Invoke("CreateNewShowRecord", new object[] {
                        LocalID,
                        LocationID,
                        Title,
                        CGTitle,
                        ProjectID,
                        CGExempt,
                        ProducerID,
                        Reels,
                        CategoryID,
                        EventDate,
                        Comments,
                        CustomFields,
                        OnDemand,
                        OnDemandStatus,
                        BugText1,
                        CrawlText1,
                        CrawlLengthInSeconds,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewShowRecordAsync(
                    string LocalID, 
                    int LocationID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    NewReel[] Reels, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    string BugText1, 
                    string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password) {
            this.CreateNewShowRecordAsync(LocalID, LocationID, Title, CGTitle, ProjectID, CGExempt, ProducerID, Reels, CategoryID, EventDate, Comments, CustomFields, OnDemand, OnDemandStatus, BugText1, CrawlText1, CrawlLengthInSeconds, username, password, null);
        }
        
        /// <remarks/>
        public void CreateNewShowRecordAsync(
                    string LocalID, 
                    int LocationID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    NewReel[] Reels, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    string BugText1, 
                    string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password, 
                    object userState) {
            if ((this.CreateNewShowRecordOperationCompleted == null)) {
                this.CreateNewShowRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewShowRecordOperationCompleted);
            }
            this.InvokeAsync("CreateNewShowRecord", new object[] {
                        LocalID,
                        LocationID,
                        Title,
                        CGTitle,
                        ProjectID,
                        CGExempt,
                        ProducerID,
                        Reels,
                        CategoryID,
                        EventDate,
                        Comments,
                        CustomFields,
                        OnDemand,
                        OnDemandStatus,
                        BugText1,
                        CrawlText1,
                        CrawlLengthInSeconds,
                        username,
                        password}, this.CreateNewShowRecordOperationCompleted, userState);
        }
        
        private void OnCreateNewShowRecordOperationCompleted(object arg) {
            if ((this.CreateNewShowRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewShowRecordCompleted(this, new CreateNewShowRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/UpdateShowRecord", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateShowRecord(
                    int ShowID, 
                    string LocalID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)] CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    [System.Xml.Serialization.XmlElementAttribute("BugText")] string BugText1, 
                    [System.Xml.Serialization.XmlElementAttribute("CrawlText")] string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password) {
            object[] results = this.Invoke("UpdateShowRecord", new object[] {
                        ShowID,
                        LocalID,
                        Title,
                        CGTitle,
                        ProjectID,
                        CGExempt,
                        ProducerID,
                        CategoryID,
                        EventDate,
                        Comments,
                        CustomFields,
                        OnDemand,
                        OnDemandStatus,
                        BugText1,
                        CrawlText1,
                        CrawlLengthInSeconds,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShowRecordAsync(
                    int ShowID, 
                    string LocalID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    string BugText1, 
                    string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password) {
            this.UpdateShowRecordAsync(ShowID, LocalID, Title, CGTitle, ProjectID, CGExempt, ProducerID, CategoryID, EventDate, Comments, CustomFields, OnDemand, OnDemandStatus, BugText1, CrawlText1, CrawlLengthInSeconds, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateShowRecordAsync(
                    int ShowID, 
                    string LocalID, 
                    string Title, 
                    string CGTitle, 
                    int ProjectID, 
                    bool CGExempt, 
                    int ProducerID, 
                    int CategoryID, 
                    System.DateTime EventDate, 
                    string Comments, 
                    CustomField[] CustomFields, 
                    bool OnDemand, 
                    string OnDemandStatus, 
                    string BugText1, 
                    string CrawlText1, 
                    int CrawlLengthInSeconds, 
                    string username, 
                    string password, 
                    object userState) {
            if ((this.UpdateShowRecordOperationCompleted == null)) {
                this.UpdateShowRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShowRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateShowRecord", new object[] {
                        ShowID,
                        LocalID,
                        Title,
                        CGTitle,
                        ProjectID,
                        CGExempt,
                        ProducerID,
                        CategoryID,
                        EventDate,
                        Comments,
                        CustomFields,
                        OnDemand,
                        OnDemandStatus,
                        BugText1,
                        CrawlText1,
                        CrawlLengthInSeconds,
                        username,
                        password}, this.UpdateShowRecordOperationCompleted, userState);
        }
        
        private void OnUpdateShowRecordOperationCompleted(object arg) {
            if ((this.UpdateShowRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShowRecordCompleted(this, new UpdateShowRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CreateNewProducer", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateNewProducer(int LocationID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password) {
            object[] results = this.Invoke("CreateNewProducer", new object[] {
                        LocationID,
                        ProducerName,
                        Phone1,
                        Phone2,
                        Address,
                        Notes,
                        Active,
                        ContactName,
                        Email,
                        Website,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewProducerAsync(int LocationID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password) {
            this.CreateNewProducerAsync(LocationID, ProducerName, Phone1, Phone2, Address, Notes, Active, ContactName, Email, Website, username, password, null);
        }
        
        /// <remarks/>
        public void CreateNewProducerAsync(int LocationID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password, object userState) {
            if ((this.CreateNewProducerOperationCompleted == null)) {
                this.CreateNewProducerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewProducerOperationCompleted);
            }
            this.InvokeAsync("CreateNewProducer", new object[] {
                        LocationID,
                        ProducerName,
                        Phone1,
                        Phone2,
                        Address,
                        Notes,
                        Active,
                        ContactName,
                        Email,
                        Website,
                        username,
                        password}, this.CreateNewProducerOperationCompleted, userState);
        }
        
        private void OnCreateNewProducerOperationCompleted(object arg) {
            if ((this.CreateNewProducerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewProducerCompleted(this, new CreateNewProducerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/UpdateProducer", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProducer(int ProducerID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password) {
            object[] results = this.Invoke("UpdateProducer", new object[] {
                        ProducerID,
                        ProducerName,
                        Phone1,
                        Phone2,
                        Address,
                        Notes,
                        Active,
                        ContactName,
                        Email,
                        Website,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProducerAsync(int ProducerID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password) {
            this.UpdateProducerAsync(ProducerID, ProducerName, Phone1, Phone2, Address, Notes, Active, ContactName, Email, Website, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateProducerAsync(int ProducerID, string ProducerName, string Phone1, string Phone2, string Address, string Notes, bool Active, string ContactName, string Email, string Website, string username, string password, object userState) {
            if ((this.UpdateProducerOperationCompleted == null)) {
                this.UpdateProducerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProducerOperationCompleted);
            }
            this.InvokeAsync("UpdateProducer", new object[] {
                        ProducerID,
                        ProducerName,
                        Phone1,
                        Phone2,
                        Address,
                        Notes,
                        Active,
                        ContactName,
                        Email,
                        Website,
                        username,
                        password}, this.UpdateProducerOperationCompleted, userState);
        }
        
        private void OnUpdateProducerOperationCompleted(object arg) {
            if ((this.UpdateProducerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProducerCompleted(this, new UpdateProducerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CreateNewProject", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateNewProject(int LocationID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password) {
            object[] results = this.Invoke("CreateNewProject", new object[] {
                        LocationID,
                        Name,
                        Description,
                        ProducerID,
                        Podcast,
                        PodcastName,
                        PodcastDescription,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewProjectAsync(int LocationID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password) {
            this.CreateNewProjectAsync(LocationID, Name, Description, ProducerID, Podcast, PodcastName, PodcastDescription, username, password, null);
        }
        
        /// <remarks/>
        public void CreateNewProjectAsync(int LocationID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password, object userState) {
            if ((this.CreateNewProjectOperationCompleted == null)) {
                this.CreateNewProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewProjectOperationCompleted);
            }
            this.InvokeAsync("CreateNewProject", new object[] {
                        LocationID,
                        Name,
                        Description,
                        ProducerID,
                        Podcast,
                        PodcastName,
                        PodcastDescription,
                        username,
                        password}, this.CreateNewProjectOperationCompleted, userState);
        }
        
        private void OnCreateNewProjectOperationCompleted(object arg) {
            if ((this.CreateNewProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewProjectCompleted(this, new CreateNewProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/UpdateProject", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProject(int ProjectID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password) {
            object[] results = this.Invoke("UpdateProject", new object[] {
                        ProjectID,
                        Name,
                        Description,
                        ProducerID,
                        Podcast,
                        PodcastName,
                        PodcastDescription,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(int ProjectID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password) {
            this.UpdateProjectAsync(ProjectID, Name, Description, ProducerID, Podcast, PodcastName, PodcastDescription, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(int ProjectID, string Name, string Description, int ProducerID, bool Podcast, string PodcastName, string PodcastDescription, string username, string password, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        ProjectID,
                        Name,
                        Description,
                        ProducerID,
                        Podcast,
                        PodcastName,
                        PodcastDescription,
                        username,
                        password}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/AddScheduleEvent", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddScheduleEvent(int ChannelID, int LocationID, int ShowID, System.DateTime RunDateTime, bool RunLock, int RunBump, bool CGExempt, [System.Xml.Serialization.XmlElementAttribute("BugText")] string BugText1, [System.Xml.Serialization.XmlElementAttribute("CrawlText")] string CrawlText1, int CrawlLength, string username, string password) {
            object[] results = this.Invoke("AddScheduleEvent", new object[] {
                        ChannelID,
                        LocationID,
                        ShowID,
                        RunDateTime,
                        RunLock,
                        RunBump,
                        CGExempt,
                        BugText1,
                        CrawlText1,
                        CrawlLength,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddScheduleEventAsync(int ChannelID, int LocationID, int ShowID, System.DateTime RunDateTime, bool RunLock, int RunBump, bool CGExempt, string BugText1, string CrawlText1, int CrawlLength, string username, string password) {
            this.AddScheduleEventAsync(ChannelID, LocationID, ShowID, RunDateTime, RunLock, RunBump, CGExempt, BugText1, CrawlText1, CrawlLength, username, password, null);
        }
        
        /// <remarks/>
        public void AddScheduleEventAsync(int ChannelID, int LocationID, int ShowID, System.DateTime RunDateTime, bool RunLock, int RunBump, bool CGExempt, string BugText1, string CrawlText1, int CrawlLength, string username, string password, object userState) {
            if ((this.AddScheduleEventOperationCompleted == null)) {
                this.AddScheduleEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddScheduleEventOperationCompleted);
            }
            this.InvokeAsync("AddScheduleEvent", new object[] {
                        ChannelID,
                        LocationID,
                        ShowID,
                        RunDateTime,
                        RunLock,
                        RunBump,
                        CGExempt,
                        BugText1,
                        CrawlText1,
                        CrawlLength,
                        username,
                        password}, this.AddScheduleEventOperationCompleted, userState);
        }
        
        private void OnAddScheduleEventOperationCompleted(object arg) {
            if ((this.AddScheduleEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddScheduleEventCompleted(this, new AddScheduleEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/RemoveScheduleEvent", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveScheduleEvent(int ScheduleID, int ChannelID, int LocationID, string username, string password) {
            object[] results = this.Invoke("RemoveScheduleEvent", new object[] {
                        ScheduleID,
                        ChannelID,
                        LocationID,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveScheduleEventAsync(int ScheduleID, int ChannelID, int LocationID, string username, string password) {
            this.RemoveScheduleEventAsync(ScheduleID, ChannelID, LocationID, username, password, null);
        }
        
        /// <remarks/>
        public void RemoveScheduleEventAsync(int ScheduleID, int ChannelID, int LocationID, string username, string password, object userState) {
            if ((this.RemoveScheduleEventOperationCompleted == null)) {
                this.RemoveScheduleEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveScheduleEventOperationCompleted);
            }
            this.InvokeAsync("RemoveScheduleEvent", new object[] {
                        ScheduleID,
                        ChannelID,
                        LocationID,
                        username,
                        password}, this.RemoveScheduleEventOperationCompleted, userState);
        }
        
        private void OnRemoveScheduleEventOperationCompleted(object arg) {
            if ((this.RemoveScheduleEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveScheduleEventCompleted(this, new RemoveScheduleEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetShowReels", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ReelInfo[] GetShowReels(int ShowID) {
            object[] results = this.Invoke("GetShowReels", new object[] {
                        ShowID});
            return ((ReelInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetShowReelsAsync(int ShowID) {
            this.GetShowReelsAsync(ShowID, null);
        }
        
        /// <remarks/>
        public void GetShowReelsAsync(int ShowID, object userState) {
            if ((this.GetShowReelsOperationCompleted == null)) {
                this.GetShowReelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShowReelsOperationCompleted);
            }
            this.InvokeAsync("GetShowReels", new object[] {
                        ShowID}, this.GetShowReelsOperationCompleted, userState);
        }
        
        private void OnGetShowReelsOperationCompleted(object arg) {
            if ((this.GetShowReelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShowReelsCompleted(this, new GetShowReelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/AddReel", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddReel(int ShowID, int Length, int Cue, int FormatID, int Title, int Chapter, string username, string password) {
            object[] results = this.Invoke("AddReel", new object[] {
                        ShowID,
                        Length,
                        Cue,
                        FormatID,
                        Title,
                        Chapter,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddReelAsync(int ShowID, int Length, int Cue, int FormatID, int Title, int Chapter, string username, string password) {
            this.AddReelAsync(ShowID, Length, Cue, FormatID, Title, Chapter, username, password, null);
        }
        
        /// <remarks/>
        public void AddReelAsync(int ShowID, int Length, int Cue, int FormatID, int Title, int Chapter, string username, string password, object userState) {
            if ((this.AddReelOperationCompleted == null)) {
                this.AddReelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReelOperationCompleted);
            }
            this.InvokeAsync("AddReel", new object[] {
                        ShowID,
                        Length,
                        Cue,
                        FormatID,
                        Title,
                        Chapter,
                        username,
                        password}, this.AddReelOperationCompleted, userState);
        }
        
        private void OnAddReelOperationCompleted(object arg) {
            if ((this.AddReelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReelCompleted(this, new AddReelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/UpdateReel", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateReel(int ReelID, int ShowID, int Length, int Cue, int Title, int Chapter, int FormatID, int DispositionID, string username, string password) {
            this.Invoke("UpdateReel", new object[] {
                        ReelID,
                        ShowID,
                        Length,
                        Cue,
                        Title,
                        Chapter,
                        FormatID,
                        DispositionID,
                        username,
                        password});
        }
        
        /// <remarks/>
        public void UpdateReelAsync(int ReelID, int ShowID, int Length, int Cue, int Title, int Chapter, int FormatID, int DispositionID, string username, string password) {
            this.UpdateReelAsync(ReelID, ShowID, Length, Cue, Title, Chapter, FormatID, DispositionID, username, password, null);
        }
        
        /// <remarks/>
        public void UpdateReelAsync(int ReelID, int ShowID, int Length, int Cue, int Title, int Chapter, int FormatID, int DispositionID, string username, string password, object userState) {
            if ((this.UpdateReelOperationCompleted == null)) {
                this.UpdateReelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReelOperationCompleted);
            }
            this.InvokeAsync("UpdateReel", new object[] {
                        ReelID,
                        ShowID,
                        Length,
                        Cue,
                        Title,
                        Chapter,
                        FormatID,
                        DispositionID,
                        username,
                        password}, this.UpdateReelOperationCompleted, userState);
        }
        
        private void OnUpdateReelOperationCompleted(object arg) {
            if ((this.UpdateReelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/DeleteReel", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReel(int ShowID, int ReelID, string username, string password) {
            this.Invoke("DeleteReel", new object[] {
                        ShowID,
                        ReelID,
                        username,
                        password});
        }
        
        /// <remarks/>
        public void DeleteReelAsync(int ShowID, int ReelID, string username, string password) {
            this.DeleteReelAsync(ShowID, ReelID, username, password, null);
        }
        
        /// <remarks/>
        public void DeleteReelAsync(int ShowID, int ReelID, string username, string password, object userState) {
            if ((this.DeleteReelOperationCompleted == null)) {
                this.DeleteReelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReelOperationCompleted);
            }
            this.InvokeAsync("DeleteReel", new object[] {
                        ShowID,
                        ReelID,
                        username,
                        password}, this.DeleteReelOperationCompleted, userState);
        }
        
        private void OnDeleteReelOperationCompleted(object arg) {
            if ((this.DeleteReelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetProducerInfo", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProducerInfo GetProducerInfo(int ProducerID, string username, string password) {
            object[] results = this.Invoke("GetProducerInfo", new object[] {
                        ProducerID,
                        username,
                        password});
            return ((ProducerInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetProducerInfoAsync(int ProducerID, string username, string password) {
            this.GetProducerInfoAsync(ProducerID, username, password, null);
        }
        
        /// <remarks/>
        public void GetProducerInfoAsync(int ProducerID, string username, string password, object userState) {
            if ((this.GetProducerInfoOperationCompleted == null)) {
                this.GetProducerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProducerInfoOperationCompleted);
            }
            this.InvokeAsync("GetProducerInfo", new object[] {
                        ProducerID,
                        username,
                        password}, this.GetProducerInfoOperationCompleted, userState);
        }
        
        private void OnGetProducerInfoOperationCompleted(object arg) {
            if ((this.GetProducerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProducerInfoCompleted(this, new GetProducerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CreateRecordRun", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateRecordRun(int LocationID, int ScheduleID, int RecordDeviceID, int RecordCue, string username, string password) {
            object[] results = this.Invoke("CreateRecordRun", new object[] {
                        LocationID,
                        ScheduleID,
                        RecordDeviceID,
                        RecordCue,
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRecordRunAsync(int LocationID, int ScheduleID, int RecordDeviceID, int RecordCue, string username, string password) {
            this.CreateRecordRunAsync(LocationID, ScheduleID, RecordDeviceID, RecordCue, username, password, null);
        }
        
        /// <remarks/>
        public void CreateRecordRunAsync(int LocationID, int ScheduleID, int RecordDeviceID, int RecordCue, string username, string password, object userState) {
            if ((this.CreateRecordRunOperationCompleted == null)) {
                this.CreateRecordRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRecordRunOperationCompleted);
            }
            this.InvokeAsync("CreateRecordRun", new object[] {
                        LocationID,
                        ScheduleID,
                        RecordDeviceID,
                        RecordCue,
                        username,
                        password}, this.CreateRecordRunOperationCompleted, userState);
        }
        
        private void OnCreateRecordRunOperationCompleted(object arg) {
            if ((this.CreateRecordRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRecordRunCompleted(this, new CreateRecordRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/RemoveRecordRun", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveRecordRun(int RecordEventID, int LocationID, string username, string password) {
            object[] results = this.Invoke("RemoveRecordRun", new object[] {
                        RecordEventID,
                        LocationID,
                        username,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveRecordRunAsync(int RecordEventID, int LocationID, string username, string password) {
            this.RemoveRecordRunAsync(RecordEventID, LocationID, username, password, null);
        }
        
        /// <remarks/>
        public void RemoveRecordRunAsync(int RecordEventID, int LocationID, string username, string password, object userState) {
            if ((this.RemoveRecordRunOperationCompleted == null)) {
                this.RemoveRecordRunOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveRecordRunOperationCompleted);
            }
            this.InvokeAsync("RemoveRecordRun", new object[] {
                        RecordEventID,
                        LocationID,
                        username,
                        password}, this.RemoveRecordRunOperationCompleted, userState);
        }
        
        private void OnRemoveRecordRunOperationCompleted(object arg) {
            if ((this.RemoveRecordRunCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveRecordRunCompleted(this, new RemoveRecordRunCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetRecordDevices", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Device[] GetRecordDevices(int LocationID) {
            object[] results = this.Invoke("GetRecordDevices", new object[] {
                        LocationID});
            return ((Device[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecordDevicesAsync(int LocationID) {
            this.GetRecordDevicesAsync(LocationID, null);
        }
        
        /// <remarks/>
        public void GetRecordDevicesAsync(int LocationID, object userState) {
            if ((this.GetRecordDevicesOperationCompleted == null)) {
                this.GetRecordDevicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecordDevicesOperationCompleted);
            }
            this.InvokeAsync("GetRecordDevices", new object[] {
                        LocationID}, this.GetRecordDevicesOperationCompleted, userState);
        }
        
        private void OnGetRecordDevicesOperationCompleted(object arg) {
            if ((this.GetRecordDevicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecordDevicesCompleted(this, new GetRecordDevicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/GetFormats", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Format[] GetFormats(int LocationID) {
            object[] results = this.Invoke("GetFormats", new object[] {
                        LocationID});
            return ((Format[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFormatsAsync(int LocationID) {
            this.GetFormatsAsync(LocationID, null);
        }
        
        /// <remarks/>
        public void GetFormatsAsync(int LocationID, object userState) {
            if ((this.GetFormatsOperationCompleted == null)) {
                this.GetFormatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormatsOperationCompleted);
            }
            this.InvokeAsync("GetFormats", new object[] {
                        LocationID}, this.GetFormatsOperationCompleted, userState);
        }
        
        private void OnGetFormatsOperationCompleted(object arg) {
            if ((this.GetFormatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormatsCompleted(this, new GetFormatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/CustomSearch", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ShowInfo[] CustomSearch(int LocationID, string Field, string SearchString) {
            object[] results = this.Invoke("CustomSearch", new object[] {
                        LocationID,
                        Field,
                        SearchString});
            return ((ShowInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void CustomSearchAsync(int LocationID, string Field, string SearchString) {
            this.CustomSearchAsync(LocationID, Field, SearchString, null);
        }
        
        /// <remarks/>
        public void CustomSearchAsync(int LocationID, string Field, string SearchString, object userState) {
            if ((this.CustomSearchOperationCompleted == null)) {
                this.CustomSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCustomSearchOperationCompleted);
            }
            this.InvokeAsync("CustomSearch", new object[] {
                        LocationID,
                        Field,
                        SearchString}, this.CustomSearchOperationCompleted, userState);
        }
        
        private void OnCustomSearchOperationCompleted(object arg) {
            if ((this.CustomSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CustomSearchCompleted(this, new CustomSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.trms.com/CablecastWS/LastModifiedSearch", RequestNamespace="http://www.trms.com/CablecastWS/", ResponseNamespace="http://www.trms.com/CablecastWS/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ShowInfo[] LastModifiedSearch(int LocationID, System.DateTime SearchDate, string DateComparator) {
            object[] results = this.Invoke("LastModifiedSearch", new object[] {
                        LocationID,
                        SearchDate,
                        DateComparator});
            return ((ShowInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void LastModifiedSearchAsync(int LocationID, System.DateTime SearchDate, string DateComparator) {
            this.LastModifiedSearchAsync(LocationID, SearchDate, DateComparator, null);
        }
        
        /// <remarks/>
        public void LastModifiedSearchAsync(int LocationID, System.DateTime SearchDate, string DateComparator, object userState) {
            if ((this.LastModifiedSearchOperationCompleted == null)) {
                this.LastModifiedSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastModifiedSearchOperationCompleted);
            }
            this.InvokeAsync("LastModifiedSearch", new object[] {
                        LocationID,
                        SearchDate,
                        DateComparator}, this.LastModifiedSearchOperationCompleted, userState);
        }
        
        private void OnLastModifiedSearchOperationCompleted(object arg) {
            if ((this.LastModifiedSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastModifiedSearchCompleted(this, new LastModifiedSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class ShowInfo {
        
        private int showIDField;
        
        private string localIDField;
        
        private string titleField;
        
        private string internalTitleField;
        
        private string categoryField;
        
        private int categoryIDField;
        
        private string commentsField;
        
        private CustomField[] customFieldsField;
        
        private System.DateTime eventDateField;
        
        private System.DateTime lastModifiedField;
        
        private string producerField;
        
        private int producerIDField;
        
        private string projectField;
        
        private int projectIDField;
        
        private int totalSecondsField;
        
        private string streamingFileURLField;
        
        private bool cGExemptField;
        
        private bool onDemandField;
        
        private string onDemandStatusField;
        
        private string bugTextField;
        
        private string crawlTextField;
        
        private int crawlLengthInSecondsField;
        
        /// <remarks/>
        public int ShowID {
            get {
                return this.showIDField;
            }
            set {
                this.showIDField = value;
            }
        }
        
        /// <remarks/>
        public string LocalID {
            get {
                return this.localIDField;
            }
            set {
                this.localIDField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string InternalTitle {
            get {
                return this.internalTitleField;
            }
            set {
                this.internalTitleField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public CustomField[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EventDate {
            get {
                return this.eventDateField;
            }
            set {
                this.eventDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModified {
            get {
                return this.lastModifiedField;
            }
            set {
                this.lastModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string Producer {
            get {
                return this.producerField;
            }
            set {
                this.producerField = value;
            }
        }
        
        /// <remarks/>
        public int ProducerID {
            get {
                return this.producerIDField;
            }
            set {
                this.producerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Project {
            get {
                return this.projectField;
            }
            set {
                this.projectField = value;
            }
        }
        
        /// <remarks/>
        public int ProjectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public int TotalSeconds {
            get {
                return this.totalSecondsField;
            }
            set {
                this.totalSecondsField = value;
            }
        }
        
        /// <remarks/>
        public string StreamingFileURL {
            get {
                return this.streamingFileURLField;
            }
            set {
                this.streamingFileURLField = value;
            }
        }
        
        /// <remarks/>
        public bool CGExempt {
            get {
                return this.cGExemptField;
            }
            set {
                this.cGExemptField = value;
            }
        }
        
        /// <remarks/>
        public bool OnDemand {
            get {
                return this.onDemandField;
            }
            set {
                this.onDemandField = value;
            }
        }
        
        /// <remarks/>
        public string OnDemandStatus {
            get {
                return this.onDemandStatusField;
            }
            set {
                this.onDemandStatusField = value;
            }
        }
        
        /// <remarks/>
        public string BugText {
            get {
                return this.bugTextField;
            }
            set {
                this.bugTextField = value;
            }
        }
        
        /// <remarks/>
        public string CrawlText {
            get {
                return this.crawlTextField;
            }
            set {
                this.crawlTextField = value;
            }
        }
        
        /// <remarks/>
        public int CrawlLengthInSeconds {
            get {
                return this.crawlLengthInSecondsField;
            }
            set {
                this.crawlLengthInSecondsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class CustomField {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Format {
        
        private int formatIDField;
        
        private string nameField;
        
        private string primitiveTypeField;
        
        private string uNCPathField;
        
        /// <remarks/>
        public int FormatID {
            get {
                return this.formatIDField;
            }
            set {
                this.formatIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string PrimitiveType {
            get {
                return this.primitiveTypeField;
            }
            set {
                this.primitiveTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UNCPath {
            get {
                return this.uNCPathField;
            }
            set {
                this.uNCPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Device {
        
        private int deviceIDField;
        
        private string deviceNameField;
        
        /// <remarks/>
        public int DeviceID {
            get {
                return this.deviceIDField;
            }
            set {
                this.deviceIDField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceName {
            get {
                return this.deviceNameField;
            }
            set {
                this.deviceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class ProducerInfo {
        
        private int producerIDField;
        
        private string producerNameField;
        
        private string phone1Field;
        
        private string phone2Field;
        
        private string addressField;
        
        private string notesField;
        
        private bool activeField;
        
        private string contactNameField;
        
        private string emailField;
        
        private string websiteField;
        
        /// <remarks/>
        public int ProducerID {
            get {
                return this.producerIDField;
            }
            set {
                this.producerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProducerName {
            get {
                return this.producerNameField;
            }
            set {
                this.producerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone1 {
            get {
                return this.phone1Field;
            }
            set {
                this.phone1Field = value;
            }
        }
        
        /// <remarks/>
        public string Phone2 {
            get {
                return this.phone2Field;
            }
            set {
                this.phone2Field = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class ReelInfo {
        
        private int reelIDField;
        
        private int lengthField;
        
        private int cueField;
        
        private int titleField;
        
        private int chapterField;
        
        private int reelNumberField;
        
        private int mediaIDField;
        
        private int formatIDField;
        
        private int dispositionIDField;
        
        private System.DateTime dispositionDateField;
        
        private string mediaNameField;
        
        /// <remarks/>
        public int ReelID {
            get {
                return this.reelIDField;
            }
            set {
                this.reelIDField = value;
            }
        }
        
        /// <remarks/>
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public int Cue {
            get {
                return this.cueField;
            }
            set {
                this.cueField = value;
            }
        }
        
        /// <remarks/>
        public int Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Chapter {
            get {
                return this.chapterField;
            }
            set {
                this.chapterField = value;
            }
        }
        
        /// <remarks/>
        public int ReelNumber {
            get {
                return this.reelNumberField;
            }
            set {
                this.reelNumberField = value;
            }
        }
        
        /// <remarks/>
        public int MediaID {
            get {
                return this.mediaIDField;
            }
            set {
                this.mediaIDField = value;
            }
        }
        
        /// <remarks/>
        public int FormatID {
            get {
                return this.formatIDField;
            }
            set {
                this.formatIDField = value;
            }
        }
        
        /// <remarks/>
        public int DispositionID {
            get {
                return this.dispositionIDField;
            }
            set {
                this.dispositionIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DispositionDate {
            get {
                return this.dispositionDateField;
            }
            set {
                this.dispositionDateField = value;
            }
        }
        
        /// <remarks/>
        public string MediaName {
            get {
                return this.mediaNameField;
            }
            set {
                this.mediaNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class NewReel {
        
        private int formatIDField;
        
        private int cueSecondsField;
        
        private int lengthSecondsField;
        
        private int titleField;
        
        private int chapterField;
        
        /// <remarks/>
        public int FormatID {
            get {
                return this.formatIDField;
            }
            set {
                this.formatIDField = value;
            }
        }
        
        /// <remarks/>
        public int CueSeconds {
            get {
                return this.cueSecondsField;
            }
            set {
                this.cueSecondsField = value;
            }
        }
        
        /// <remarks/>
        public int LengthSeconds {
            get {
                return this.lengthSecondsField;
            }
            set {
                this.lengthSecondsField = value;
            }
        }
        
        /// <remarks/>
        public int Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int Chapter {
            get {
                return this.chapterField;
            }
            set {
                this.chapterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class SiteSearchResult {
        
        private bool isRemoteSiteField;
        
        private string siteNameField;
        
        private string siteDescriptionField;
        
        private string siteAddressField;
        
        private string siteCityField;
        
        private string siteStateField;
        
        private string siteZipCodeField;
        
        private string sitePhoneField;
        
        private string siteEmailField;
        
        private string siteWebField;
        
        private ShowInfo[] showsField;
        
        /// <remarks/>
        public bool IsRemoteSite {
            get {
                return this.isRemoteSiteField;
            }
            set {
                this.isRemoteSiteField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string SiteDescription {
            get {
                return this.siteDescriptionField;
            }
            set {
                this.siteDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string SiteAddress {
            get {
                return this.siteAddressField;
            }
            set {
                this.siteAddressField = value;
            }
        }
        
        /// <remarks/>
        public string SiteCity {
            get {
                return this.siteCityField;
            }
            set {
                this.siteCityField = value;
            }
        }
        
        /// <remarks/>
        public string SiteState {
            get {
                return this.siteStateField;
            }
            set {
                this.siteStateField = value;
            }
        }
        
        /// <remarks/>
        public string SiteZipCode {
            get {
                return this.siteZipCodeField;
            }
            set {
                this.siteZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SitePhone {
            get {
                return this.sitePhoneField;
            }
            set {
                this.sitePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SiteEmail {
            get {
                return this.siteEmailField;
            }
            set {
                this.siteEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SiteWeb {
            get {
                return this.siteWebField;
            }
            set {
                this.siteWebField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ShowInfo[] Shows {
            get {
                return this.showsField;
            }
            set {
                this.showsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Channel {
        
        private int channelIDField;
        
        private string nameField;
        
        private int primaryLocationIDField;
        
        /// <remarks/>
        public int ChannelID {
            get {
                return this.channelIDField;
            }
            set {
                this.channelIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int PrimaryLocationID {
            get {
                return this.primaryLocationIDField;
            }
            set {
                this.primaryLocationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Location {
        
        private int locationIDField;
        
        private string nameField;
        
        /// <remarks/>
        public int LocationID {
            get {
                return this.locationIDField;
            }
            set {
                this.locationIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Project {
        
        private int projectIDField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool hasPodcastField;
        
        private string podcastNameField;
        
        private string podcastDescriptionField;
        
        private string podcastUrlField;
        
        /// <remarks/>
        public int ProjectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool HasPodcast {
            get {
                return this.hasPodcastField;
            }
            set {
                this.hasPodcastField = value;
            }
        }
        
        /// <remarks/>
        public string PodcastName {
            get {
                return this.podcastNameField;
            }
            set {
                this.podcastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PodcastDescription {
            get {
                return this.podcastDescriptionField;
            }
            set {
                this.podcastDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PodcastUrl {
            get {
                return this.podcastUrlField;
            }
            set {
                this.podcastUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Category {
        
        private int categoryIDField;
        
        private string nameField;
        
        /// <remarks/>
        public int CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class Producer {
        
        private int producerIDField;
        
        private string nameField;
        
        /// <remarks/>
        public int ProducerID {
            get {
                return this.producerIDField;
            }
            set {
                this.producerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.trms.com/CablecastWS/")]
    public partial class ScheduleInfo {
        
        private int scheduleIDField;
        
        private int showIDField;
        
        private string showTitleField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private int runBumpField;
        
        private bool cGExemptField;
        
        /// <remarks/>
        public int ScheduleID {
            get {
                return this.scheduleIDField;
            }
            set {
                this.scheduleIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShowID {
            get {
                return this.showIDField;
            }
            set {
                this.showIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShowTitle {
            get {
                return this.showTitleField;
            }
            set {
                this.showTitleField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public int RunBump {
            get {
                return this.runBumpField;
            }
            set {
                this.runBumpField = value;
            }
        }
        
        /// <remarks/>
        public bool CGExempt {
            get {
                return this.cGExemptField;
            }
            set {
                this.cGExemptField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void WSVersionCompletedEventHandler(object sender, WSVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WSVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WSVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DataVersionCompletedEventHandler(object sender, DataVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DataVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DataVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetShowInformationCompletedEventHandler(object sender, GetShowInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShowInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetScheduleInformationCompletedEventHandler(object sender, GetScheduleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScheduleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScheduleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScheduleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScheduleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCGExemptScheduleInformationCompletedEventHandler(object sender, GetCGExemptScheduleInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCGExemptScheduleInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCGExemptScheduleInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ScheduleInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ScheduleInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProducersCompletedEventHandler(object sender, GetProducersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProducersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProducersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Producer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Producer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectsCompletedEventHandler(object sender, GetProjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLocationsCompletedEventHandler(object sender, GetLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Location[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Location[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetChannelsCompletedEventHandler(object sender, GetChannelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChannelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChannelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Channel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Channel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SimpleShowSearchCompletedEventHandler(object sender, SimpleShowSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleShowSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleShowSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdvancedShowSearchCompletedEventHandler(object sender, AdvancedShowSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvancedShowSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdvancedShowSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AdvancedCGExemptShowSearchCompletedEventHandler(object sender, AdvancedCGExemptShowSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AdvancedCGExemptShowSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AdvancedCGExemptShowSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteSearchResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteSearchResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetLiveURLCompletedEventHandler(object sender, GetLiveURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLiveURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLiveURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void BugStateCompletedEventHandler(object sender, BugStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BugStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BugStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void BugTextCompletedEventHandler(object sender, BugTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BugTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BugTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CrawlTextCompletedEventHandler(object sender, CrawlTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CrawlTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CrawlTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateNewShowRecordCompletedEventHandler(object sender, CreateNewShowRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewShowRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewShowRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateShowRecordCompletedEventHandler(object sender, UpdateShowRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShowRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShowRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateNewProducerCompletedEventHandler(object sender, CreateNewProducerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewProducerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewProducerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateProducerCompletedEventHandler(object sender, UpdateProducerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProducerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProducerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateNewProjectCompletedEventHandler(object sender, CreateNewProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, UpdateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddScheduleEventCompletedEventHandler(object sender, AddScheduleEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddScheduleEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddScheduleEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RemoveScheduleEventCompletedEventHandler(object sender, RemoveScheduleEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveScheduleEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveScheduleEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetShowReelsCompletedEventHandler(object sender, GetShowReelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShowReelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShowReelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReelInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReelInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void AddReelCompletedEventHandler(object sender, AddReelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UpdateReelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void DeleteReelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProducerInfoCompletedEventHandler(object sender, GetProducerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProducerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProducerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProducerInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProducerInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CreateRecordRunCompletedEventHandler(object sender, CreateRecordRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRecordRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRecordRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void RemoveRecordRunCompletedEventHandler(object sender, RemoveRecordRunCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveRecordRunCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveRecordRunCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRecordDevicesCompletedEventHandler(object sender, GetRecordDevicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecordDevicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecordDevicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Device[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Device[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFormatsCompletedEventHandler(object sender, GetFormatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Format[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Format[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void CustomSearchCompletedEventHandler(object sender, CustomSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CustomSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CustomSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShowInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void LastModifiedSearchCompletedEventHandler(object sender, LastModifiedSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastModifiedSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastModifiedSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShowInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShowInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591